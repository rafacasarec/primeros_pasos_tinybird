name: Tinybird CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    name: Tinybird CI Workflow
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      # Configuración inicial
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 300
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"
          cache: 'pip'

      - name: Validate input
        run: |
          [[ "${{ secrets.tb_admin_token }}" ]] || { echo "Missing TB_ADMIN_TOKEN secret"; exit 1; }
          [[ "${{ secrets.tb_host }}" ]] || { echo "Missing TB_HOST secret"; exit 1; }

      - name: Set environment variables
        run: |
          _ENV_FLAGS="${ENV_FLAGS:=--last-partition --wait}"
          _NORMALIZED_BRANCH_NAME=$(echo $DATA_PROJECT_DIR | rev | cut -d "/" -f 1 | rev | tr '.-' '_')
          echo "_NORMALIZED_BRANCH_NAME=$_NORMALIZED_BRANCH_NAME" >> $GITHUB_ENV

      # Instalación del CLI
      - name: Install Tinybird CLI
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            pip install tinybird-cli
          fi

      - name: Check Tinybird CLI version
        run: tb --version

      # Verificaciones iniciales
      - name: Check datafiles syntax
        run: tb check

      - name: Check auth
        run: tb auth --token p.eyJ1IjogIjA3M2NmYzVhLWJiNzEtNDY2My1iYWJmLWY2MzI2MzFlMGMyZSIsICJpZCI6ICIwYjI4NjU4OC0yNGU0LTQ2MTAtODQ4YS05M2NiZDBjNjM1NGMiLCAiaG9zdCI6ICJldV9zaGFyZWQifQ.vdDpeIEVUwnxbvOvKei5Whdwhw1_s3BgJd41m-rOzeY
      

      # Crear rama de prueba
      - name: Delete previous test branch if exists
        run: |
          BRANCH_NAME="tmp_ci_${_NORMALIZED_BRANCH_NAME}_${{ github.event.pull_request.number }}"
          output=$(tb branch ls)
          if echo "$output" | grep -q "\b$BRANCH_NAME\b"; then
            tb branch rm $BRANCH_NAME --yes
          fi

      - name: Create new test branch
        run: |
          BRANCH_NAME="tmp_ci_${_NORMALIZED_BRANCH_NAME}_${{ github.event.pull_request.number }}"
          tb branch create $BRANCH_NAME --last-partition --wait

      # Desplegar cambios
      - name: Deploy changes to test branch
        run: tb push --only-changes --force --yes

      # Pruebas
      - name: Set execution permission for exec_test.sh
        run: chmod +x ./scripts/exec_test.sh
        
      - name: Run fixture tests
        run: |
          if [ -f ./scripts/exec_test.sh ]; then
            ./scripts/exec_test.sh
          fi

      - name: Run data quality tests
        run: tb test run -v -c 4

      # Eliminar rama de prueba
      - name: Delete test branch
        run: |
          BRANCH_NAME="tmp_ci_${_NORMALIZED_BRANCH_NAME}_${{ github.event.pull_request.number }}"
          branch rm $BRANCH_NAME --yes
