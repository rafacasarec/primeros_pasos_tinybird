name: Tinybird CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  cd:
    name: Tinybird CD Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"
          cache: 'pip'

      - name: Install Tinybird CLI
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            pip install tinybird-cli
          fi

      - name: Check Tinybird CLI version
        run: tb --version

      - name: Authenticate with Tinybird
        run: tb auth --token p.eyJ1IjogIjA3M2NmYzVhLWJiNzEtNDY2My1iYWJmLWY2MzI2MzFlMGMyZSIsICJpZCI6ICIwYjI4NjU4OC0yNGU0LTQ2MTAtODQ4YS05M2NiZDBjNjM1NGMiLCAiaG9zdCI6ICJldV9zaGFyZWQifQ.vdDpeIEVUwnxbvOvKei5Whdwhw1_s3BgJd41m-rOzeY

      - name: Deploy changes to production
        run: |
          DEPLOY_FILE=./deploy/${{ github.run_id }}/deploy.sh
          if [ -f "$DEPLOY_FILE" ]; then
            chmod +x $DEPLOY_FILE
            $DEPLOY_FILE
          else
            echo "Deploy file not found. Using tb push as fallback."
            tb push --only-changes --yes
          fi
